version: '3.8'

volumes:
  pgdata:
    name: esd_pgdata 

networks:
  esd-net:
    driver: bridge
    name: esd-net

services:
  kong:
    image: kong/kong-gateway:3.9.0.1
    container_name: kong-dbless
    restart: always
    networks:
      - esd-net
    volumes:
      - ./kong:/kong/declarative
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/kong/declarative/kong.yml"
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_ADMIN_GUI_URL: "http://localhost:8002"
      KONG_LICENSE_DATA: ""
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
      - "8002:8002"
      - "8445:8445"
      - "8003:8003"
      - "8004:8004"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - esd-net
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - esd-net
    ports:
      - "1010:3000"

  reccomend-food:
    build: ./services/complex/reccomend-food
    container_name: reccomend-food
    networks:
      - esd-net
    ports:
      - "8080:8080"
    depends_on:
      - reccomendation
      - menu
  
  chatgpt:
    build: ./services/simple/chatgpt
    container_name: chatgpt
    networks:
      - esd-net
    ports:
      - "3000:3000"
    env_file:
      - ./services/simple/chatgpt/.env

  menu:
    build: ./services/simple/menu
    container_name: menu
    networks:
      - esd-net
    ports:
      - "5001:5000"
    volumes:
      - ./services/simple/menu/firebase_credentials.json:/app/firebase_credentials.json

  reccomendation:
    build: ./services/simple/reccomendation
    container_name: reccomendation
    networks:
      - esd-net
    ports:
      - "4000:4000"
    env_file:
      - ./services/simple/reccomendation/.env

#   rabbitmq:
#     image: rabbitmq:3-management #docker image with tag3 management 
#     hostname: foodapp-rabbit # RabbitMQ stores data based on what it calls the "Node Name", which defaults to the hostname. We specify a hostname explicitly to keep track of our data.
#     restart: always #always restarts container when it stops 
#     ports:
#       - "5672:5672" #RbbitMQ Client Connection
#       - "15672:15672" #RabbitMQ Management Website
#     volumes: 
#         #Bind the volume ‘rabbitmq_data’ defined above to the container’s path ‘/var/lib/rabbitmq’ to persist RabbitMQ’s data across container recreation events.
#         #Keeps all of the data in one storage bin even after mutiple restart instances 
#       - rabbitmq_data:/var/lib/rabbitmq 
#     networks:
#       - esd-net #atttach network block to esd.net


